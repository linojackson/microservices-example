version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_CREATE_TOPICS: 'test-topic:1:1'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      
  mysql-micro-company:
    image: mysql:8.0.30
    container_name: mysql-micro-company
    restart: always
    environment:
        - MYSQL_DATABASE=mysql-micro-company
        - MYSQL_ROOT_PASSWORD=password
        - MYSQL_USER=user
        - MYSQL_PASSWORD=userpassword
    ports:
        - '3306:3306'

  mysql-micro-employee:
    image: mysql:8.0.30
    container_name: mysql-micro-employee
    restart: always
    environment:
        - MYSQL_DATABASE=mysql-micro-employee
        - MYSQL_ROOT_PASSWORD=password
        - MYSQL_USER=user
        - MYSQL_PASSWORD=userpassword
        - MYSQL_TCP_PORT=3307
    ports:
        - '3307:3307'

  micro-company:
    build:
      context: ./micro-company
      dockerfile: Dockerfile
    image: micro-company
    depends_on:
      - mysql-micro-company
    ports:
      - '3000:3000'
    volumes:
      - ./micro-company:/usr/micro-company
    networks:
      - micro-company-network
    command: yarn dev -L

  micro-employee:
    build:
      context: ./micro-employee
      dockerfile: Dockerfile
    image: micro-employee
    depends_on:
      - mysql-micro-employee
    ports:
      - '3333:3333'
    volumes:
      - ./micro-employee:/usr/micro-employee
    networks:
      - micro-employee-network
    command: yarn dev -L
      
networks:
  micro-company-network:
    driver: bridge
  micro-employee-network:
    driver: bridge